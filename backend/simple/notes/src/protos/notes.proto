syntax = "proto3";

package notes;


option java_package = "com.ESD.Notes.proto";
option java_outer_classname = "NotesServiceProto";


// Define a service with RPC methods
service NoteService {
  // Define an RPC method to upload a note
  rpc UploadNote (UploadNoteRequest) returns (UploadNoteResponse);

  // Define an RPC method to retrieve a note
  rpc RetrieveNote (RetrieveNoteRequest) returns (RetrieveNoteResponse);

  // Define an RPC method to retrieve multiple notes
  rpc RetrieveMultipleNotes (RetrieveMultipleNotesRequest) returns (RetrieveMultipleNotesResponse);

  // Define an RPC method to retrieve multiple notes by user id
  rpc RetrieveMultipleNotesByUserId (RetrieveMultipleNotesByUserIdRequest) returns (RetrieveMultipleNotesByUserIdResponse);

  rpc RetrieveNoteMetadata (RetrieveNoteMetadataRequest) returns (RetrieveNoteMetadataResponse);

  // Define an RPC method to update notes by note id
  rpc UpdateNote (UpdateNoteRequest) returns (UpdateNoteResponse);

  // Define an RPC method to view notes by topic and name
  rpc ViewNotesByTopicAndName (ViewNotesByTopicAndNameRequest) returns (ViewNotesByTopicAndNameResponse);

  // Define an RPC method to retrieve multiple saved notes by user id
  rpc RetrieveMultipleSavedNotes (RetrieveMultipleSavedNotesRequest) returns (RetrieveMultipleSavedNotesResponse);
}

message UpdateNoteRequest {
  NotePreview notePreview = 1;
}

message UpdateNoteResponse {
  bool success = 1;
}

// Note message for storing a note
message Note {
  string userId = 1;
  string fileId = 2;
  bytes fileContent = 3;
  string fileName = 4;
  string title = 5;
  string topic = 6;
  string generateType = 7;
}

message NotePreview {
  string userId = 1;
  string fileId = 2;
  string fileName = 3;
  string title = 4;
  string topic = 5;
  int32 sizeInBytes = 6;
  int32 numPages = 7;
  string generateType = 8;
}

// Request message for uploading a note
message UploadNoteRequest {
  Note note = 1;
}

// Response message for uploading a note
message UploadNoteResponse {
  string fileId = 1;
}

// Request message for retrieving a note
message RetrieveNoteRequest {
  string fileId = 1;
}

// Response message for retrieving a note
message RetrieveNoteResponse {
  Note note = 1;
}

// Request message for retrieving metadata of a single note
message RetrieveNoteMetadataRequest {
  string fileId = 1; // ID of the note whose metadata is to be retrieved
}

// Response message for retrieving metadata of a single note
message RetrieveNoteMetadataResponse {
  // Using NotePreview to represent the metadata, assuming it has the fields needed
  NotePreview noteMetadata = 1; // Contains metadata of the requested note
}

// Request message for retrieving multiple notes
 // if page exists, offset is calculated as (page - 1) * limit.
 // if offset exists, page is calculated as (offset / limit) + 1.
 // Existence determined by whether offset or page == 0 (default value).
 // If both are 0, then application should throw an error.
message RetrieveMultipleNotesRequest {
  int32 limit = 1;
  int32 offset = 2;
  int32 page = 3;
}

// Response message for retrieving multiple notes
message RetrieveMultipleNotesResponse {
  int32 count = 1;
  repeated NotePreview notes = 2;
  int32 nextPage = 3;
}

// Request message for retrieving multiple notes by user id
message RetrieveMultipleNotesByUserIdRequest {
  string userId = 1;
  int32 limit = 2;
  int32 offset = 3;
  int32 page = 4;
  string notesTitle = 5;
}

// Response message for retrieving multiple notes by user id
message RetrieveMultipleNotesByUserIdResponse {
  int32 count = 1;
  repeated NotePreview notes = 2;
}

message ViewNotesByTopicAndNameRequest {
  string topic = 1;
  string notesTitle = 2;
  int32 page = 3;
  int32 limit = 4;
  int32 offset = 5;
}

message ViewNotesByTopicAndNameResponse {
  int32 count = 1;
  repeated notes.NotePreview notes = 2;
}

// Request message for retrieving multiple saved notes by user id
message RetrieveMultipleSavedNotesRequest {
  int32 limit = 1;
  int32 offset = 2;
  int32 page = 3;
  string notesTitle = 4;
  repeated string saved_notes_ids = 5;
}

// Response message for retrieving multiple saved notes by user id
message RetrieveMultipleSavedNotesResponse {
  int32 count = 1;
  repeated NotePreview notes = 2;
}
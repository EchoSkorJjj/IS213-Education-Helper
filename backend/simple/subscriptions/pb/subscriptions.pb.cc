// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: subscriptions.proto

#include "subscriptions.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace subscription_pb {

inline constexpr HealthCheckResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HealthCheckResponse::HealthCheckResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HealthCheckResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthCheckResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthCheckResponseDefaultTypeInternal() {}
  union {
    HealthCheckResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthCheckResponseDefaultTypeInternal _HealthCheckResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR HealthCheckRequest::HealthCheckRequest(::_pbi::ConstantInitialized) {}
struct HealthCheckRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthCheckRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthCheckRequestDefaultTypeInternal() {}
  union {
    HealthCheckRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthCheckRequestDefaultTypeInternal _HealthCheckRequest_default_instance_;

inline constexpr GetSubscriptionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetSubscriptionRequest::GetSubscriptionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetSubscriptionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSubscriptionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSubscriptionRequestDefaultTypeInternal() {}
  union {
    GetSubscriptionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSubscriptionRequestDefaultTypeInternal _GetSubscriptionRequest_default_instance_;

inline constexpr DeleteSubscriptionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteSubscriptionRequest::DeleteSubscriptionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeleteSubscriptionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSubscriptionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSubscriptionRequestDefaultTypeInternal() {}
  union {
    DeleteSubscriptionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSubscriptionRequestDefaultTypeInternal _DeleteSubscriptionRequest_default_instance_;

inline constexpr SubscriptionMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subscription_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscribed_until_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SubscriptionMessage::SubscriptionMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SubscriptionMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscriptionMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscriptionMessageDefaultTypeInternal() {}
  union {
    SubscriptionMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscriptionMessageDefaultTypeInternal _SubscriptionMessage_default_instance_;

inline constexpr ResponseMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseMetadata::ResponseMetadata(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResponseMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseMetadataDefaultTypeInternal() {}
  union {
    ResponseMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseMetadataDefaultTypeInternal _ResponseMetadata_default_instance_;

inline constexpr CreateSubscriptionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscribed_until_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateSubscriptionRequest::CreateSubscriptionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateSubscriptionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSubscriptionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSubscriptionRequestDefaultTypeInternal() {}
  union {
    CreateSubscriptionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSubscriptionRequestDefaultTypeInternal _CreateSubscriptionRequest_default_instance_;

inline constexpr ServiceResponseWrapper::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        metadata_{nullptr},
        payload_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ServiceResponseWrapper::ServiceResponseWrapper(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServiceResponseWrapperDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceResponseWrapperDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceResponseWrapperDefaultTypeInternal() {}
  union {
    ServiceResponseWrapper _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceResponseWrapperDefaultTypeInternal _ServiceResponseWrapper_default_instance_;
}  // namespace subscription_pb
static ::_pb::Metadata file_level_metadata_subscriptions_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_subscriptions_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_subscriptions_2eproto = nullptr;
const ::uint32_t TableStruct_subscriptions_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::subscription_pb::ResponseMetadata, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::subscription_pb::ResponseMetadata, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::subscription_pb::ResponseMetadata, _impl_.request_id_),
    PROTOBUF_FIELD_OFFSET(::subscription_pb::ResponseMetadata, _impl_.timestamp_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::subscription_pb::ServiceResponseWrapper, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::subscription_pb::ServiceResponseWrapper, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::subscription_pb::ServiceResponseWrapper, _impl_.metadata_),
    PROTOBUF_FIELD_OFFSET(::subscription_pb::ServiceResponseWrapper, _impl_.payload_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::subscription_pb::SubscriptionMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::subscription_pb::SubscriptionMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::subscription_pb::SubscriptionMessage, _impl_.subscription_id_),
    PROTOBUF_FIELD_OFFSET(::subscription_pb::SubscriptionMessage, _impl_.user_id_),
    PROTOBUF_FIELD_OFFSET(::subscription_pb::SubscriptionMessage, _impl_.subscribed_until_),
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::subscription_pb::CreateSubscriptionRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::subscription_pb::CreateSubscriptionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::subscription_pb::CreateSubscriptionRequest, _impl_.user_id_),
    PROTOBUF_FIELD_OFFSET(::subscription_pb::CreateSubscriptionRequest, _impl_.subscribed_until_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::subscription_pb::GetSubscriptionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::subscription_pb::GetSubscriptionRequest, _impl_.user_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::subscription_pb::DeleteSubscriptionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::subscription_pb::DeleteSubscriptionRequest, _impl_.user_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::subscription_pb::HealthCheckRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::subscription_pb::HealthCheckResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::subscription_pb::HealthCheckResponse, _impl_.status_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::subscription_pb::ResponseMetadata)},
        {12, 22, -1, sizeof(::subscription_pb::ServiceResponseWrapper)},
        {24, 35, -1, sizeof(::subscription_pb::SubscriptionMessage)},
        {38, 48, -1, sizeof(::subscription_pb::CreateSubscriptionRequest)},
        {50, -1, -1, sizeof(::subscription_pb::GetSubscriptionRequest)},
        {59, -1, -1, sizeof(::subscription_pb::DeleteSubscriptionRequest)},
        {68, -1, -1, sizeof(::subscription_pb::HealthCheckRequest)},
        {76, -1, -1, sizeof(::subscription_pb::HealthCheckResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::subscription_pb::_ResponseMetadata_default_instance_._instance,
    &::subscription_pb::_ServiceResponseWrapper_default_instance_._instance,
    &::subscription_pb::_SubscriptionMessage_default_instance_._instance,
    &::subscription_pb::_CreateSubscriptionRequest_default_instance_._instance,
    &::subscription_pb::_GetSubscriptionRequest_default_instance_._instance,
    &::subscription_pb::_DeleteSubscriptionRequest_default_instance_._instance,
    &::subscription_pb::_HealthCheckRequest_default_instance_._instance,
    &::subscription_pb::_HealthCheckResponse_default_instance_._instance,
};
const char descriptor_table_protodef_subscriptions_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023subscriptions.proto\022\017subscription_pb\032\037"
    "google/protobuf/timestamp.proto\032\031google/"
    "protobuf/any.proto\"k\n\020ResponseMetadata\022\035"
    "\n\nrequest_id\030\001 \001(\tR\trequestId\0228\n\ttimesta"
    "mp\030\002 \001(\0132\032.google.protobuf.TimestampR\tti"
    "mestamp\"\207\001\n\026ServiceResponseWrapper\022=\n\010me"
    "tadata\030\001 \001(\0132!.subscription_pb.ResponseM"
    "etadataR\010metadata\022.\n\007payload\030\002 \001(\0132\024.goo"
    "gle.protobuf.AnyR\007payload\"\236\001\n\023Subscripti"
    "onMessage\022\'\n\017subscription_id\030\001 \001(\tR\016subs"
    "criptionId\022\027\n\007user_id\030\002 \001(\tR\006userId\022E\n\020s"
    "ubscribed_until\030\003 \001(\0132\032.google.protobuf."
    "TimestampR\017subscribedUntil\"{\n\031CreateSubs"
    "criptionRequest\022\027\n\007user_id\030\001 \001(\tR\006userId"
    "\022E\n\020subscribed_until\030\002 \001(\0132\032.google.prot"
    "obuf.TimestampR\017subscribedUntil\"1\n\026GetSu"
    "bscriptionRequest\022\027\n\007user_id\030\001 \001(\tR\006user"
    "Id\"4\n\031DeleteSubscriptionRequest\022\027\n\007user_"
    "id\030\001 \001(\tR\006userId\"\024\n\022HealthCheckRequest\"-"
    "\n\023HealthCheckResponse\022\026\n\006status\030\001 \001(\tR\006s"
    "tatus2h\n\014Subscription\022X\n\013CheckHealth\022#.s"
    "ubscription_pb.HealthCheckRequest\032$.subs"
    "cription_pb.HealthCheckResponseB\201\001\n\023com."
    "subscription_pbB\022SubscriptionsProtoP\001\242\002\003"
    "SXX\252\002\016SubscriptionPb\312\002\016SubscriptionPb\342\002\032"
    "SubscriptionPb\\GPBMetadata\352\002\016Subscriptio"
    "nPbb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_subscriptions_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_subscriptions_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_subscriptions_2eproto = {
    false,
    false,
    1051,
    descriptor_table_protodef_subscriptions_2eproto,
    "subscriptions.proto",
    &descriptor_table_subscriptions_2eproto_once,
    descriptor_table_subscriptions_2eproto_deps,
    2,
    8,
    schemas,
    file_default_instances,
    TableStruct_subscriptions_2eproto::offsets,
    file_level_metadata_subscriptions_2eproto,
    file_level_enum_descriptors_subscriptions_2eproto,
    file_level_service_descriptors_subscriptions_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_subscriptions_2eproto_getter() {
  return &descriptor_table_subscriptions_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_subscriptions_2eproto(&descriptor_table_subscriptions_2eproto);
namespace subscription_pb {
// ===================================================================

class ResponseMetadata::_Internal {
 public:
  using HasBits = decltype(std::declval<ResponseMetadata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ResponseMetadata, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& timestamp(const ResponseMetadata* msg);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& ResponseMetadata::_Internal::timestamp(const ResponseMetadata* msg) {
  return *msg->_impl_.timestamp_;
}
void ResponseMetadata::clear_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ResponseMetadata::ResponseMetadata(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscription_pb.ResponseMetadata)
}
inline PROTOBUF_NDEBUG_INLINE ResponseMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        request_id_(arena, from.request_id_) {}

ResponseMetadata::ResponseMetadata(
    ::google::protobuf::Arena* arena,
    const ResponseMetadata& from)
    : ::google::protobuf::Message(arena) {
  ResponseMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.timestamp_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:subscription_pb.ResponseMetadata)
}
inline PROTOBUF_NDEBUG_INLINE ResponseMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        request_id_(arena) {}

inline void ResponseMetadata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
ResponseMetadata::~ResponseMetadata() {
  // @@protoc_insertion_point(destructor:subscription_pb.ResponseMetadata)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ResponseMetadata::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.request_id_.Destroy();
  delete _impl_.timestamp_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ResponseMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:subscription_pb.ResponseMetadata)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.request_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timestamp_ != nullptr);
    _impl_.timestamp_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ResponseMetadata::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 51, 2> ResponseMetadata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResponseMetadata, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ResponseMetadata_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp timestamp = 2 [json_name = "timestamp"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ResponseMetadata, _impl_.timestamp_)}},
    // string request_id = 1 [json_name = "requestId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseMetadata, _impl_.request_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string request_id = 1 [json_name = "requestId"];
    {PROTOBUF_FIELD_OFFSET(ResponseMetadata, _impl_.request_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp timestamp = 2 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(ResponseMetadata, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\40\12\0\0\0\0\0\0"
    "subscription_pb.ResponseMetadata"
    "request_id"
  }},
};

::uint8_t* ResponseMetadata::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscription_pb.ResponseMetadata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string request_id = 1 [json_name = "requestId"];
  if (!this->_internal_request_id().empty()) {
    const std::string& _s = this->_internal_request_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "subscription_pb.ResponseMetadata.request_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 2 [json_name = "timestamp"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscription_pb.ResponseMetadata)
  return target;
}

::size_t ResponseMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscription_pb.ResponseMetadata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string request_id = 1 [json_name = "requestId"];
  if (!this->_internal_request_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_request_id());
  }

  // .google.protobuf.Timestamp timestamp = 2 [json_name = "timestamp"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.timestamp_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ResponseMetadata::_class_data_ = {
    ResponseMetadata::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ResponseMetadata::GetClassData() const {
  return &_class_data_;
}

void ResponseMetadata::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ResponseMetadata*>(&to_msg);
  auto& from = static_cast<const ResponseMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:subscription_pb.ResponseMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseMetadata::CopyFrom(const ResponseMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscription_pb.ResponseMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ResponseMetadata::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ResponseMetadata::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ResponseMetadata::InternalSwap(ResponseMetadata* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata ResponseMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_subscriptions_2eproto_getter, &descriptor_table_subscriptions_2eproto_once,
      file_level_metadata_subscriptions_2eproto[0]);
}
// ===================================================================

class ServiceResponseWrapper::_Internal {
 public:
  using HasBits = decltype(std::declval<ServiceResponseWrapper>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ServiceResponseWrapper, _impl_._has_bits_);
  static const ::subscription_pb::ResponseMetadata& metadata(const ServiceResponseWrapper* msg);
  static void set_has_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Any& payload(const ServiceResponseWrapper* msg);
  static void set_has_payload(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::subscription_pb::ResponseMetadata& ServiceResponseWrapper::_Internal::metadata(const ServiceResponseWrapper* msg) {
  return *msg->_impl_.metadata_;
}
const ::google::protobuf::Any& ServiceResponseWrapper::_Internal::payload(const ServiceResponseWrapper* msg) {
  return *msg->_impl_.payload_;
}
void ServiceResponseWrapper::clear_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.payload_ != nullptr) _impl_.payload_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ServiceResponseWrapper::ServiceResponseWrapper(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscription_pb.ServiceResponseWrapper)
}
inline PROTOBUF_NDEBUG_INLINE ServiceResponseWrapper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ServiceResponseWrapper::ServiceResponseWrapper(
    ::google::protobuf::Arena* arena,
    const ServiceResponseWrapper& from)
    : ::google::protobuf::Message(arena) {
  ServiceResponseWrapper* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.metadata_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::subscription_pb::ResponseMetadata>(arena, *from._impl_.metadata_)
                : nullptr;
  _impl_.payload_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Any>(arena, *from._impl_.payload_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:subscription_pb.ServiceResponseWrapper)
}
inline PROTOBUF_NDEBUG_INLINE ServiceResponseWrapper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ServiceResponseWrapper::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, metadata_),
           0,
           offsetof(Impl_, payload_) -
               offsetof(Impl_, metadata_) +
               sizeof(Impl_::payload_));
}
ServiceResponseWrapper::~ServiceResponseWrapper() {
  // @@protoc_insertion_point(destructor:subscription_pb.ServiceResponseWrapper)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServiceResponseWrapper::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.metadata_;
  delete _impl_.payload_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ServiceResponseWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:subscription_pb.ServiceResponseWrapper)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.metadata_ != nullptr);
      _impl_.metadata_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.payload_ != nullptr);
      _impl_.payload_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServiceResponseWrapper::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ServiceResponseWrapper::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServiceResponseWrapper, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ServiceResponseWrapper_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Any payload = 2 [json_name = "payload"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ServiceResponseWrapper, _impl_.payload_)}},
    // .subscription_pb.ResponseMetadata metadata = 1 [json_name = "metadata"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ServiceResponseWrapper, _impl_.metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .subscription_pb.ResponseMetadata metadata = 1 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(ServiceResponseWrapper, _impl_.metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Any payload = 2 [json_name = "payload"];
    {PROTOBUF_FIELD_OFFSET(ServiceResponseWrapper, _impl_.payload_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::subscription_pb::ResponseMetadata>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

::uint8_t* ServiceResponseWrapper::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscription_pb.ServiceResponseWrapper)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .subscription_pb.ResponseMetadata metadata = 1 [json_name = "metadata"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::metadata(this),
        _Internal::metadata(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Any payload = 2 [json_name = "payload"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::payload(this),
        _Internal::payload(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscription_pb.ServiceResponseWrapper)
  return target;
}

::size_t ServiceResponseWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscription_pb.ServiceResponseWrapper)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .subscription_pb.ResponseMetadata metadata = 1 [json_name = "metadata"];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.metadata_);
    }

    // .google.protobuf.Any payload = 2 [json_name = "payload"];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServiceResponseWrapper::_class_data_ = {
    ServiceResponseWrapper::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ServiceResponseWrapper::GetClassData() const {
  return &_class_data_;
}

void ServiceResponseWrapper::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServiceResponseWrapper*>(&to_msg);
  auto& from = static_cast<const ServiceResponseWrapper&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:subscription_pb.ServiceResponseWrapper)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_metadata()->::subscription_pb::ResponseMetadata::MergeFrom(
          from._internal_metadata());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_payload()->::google::protobuf::Any::MergeFrom(
          from._internal_payload());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceResponseWrapper::CopyFrom(const ServiceResponseWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscription_pb.ServiceResponseWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServiceResponseWrapper::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ServiceResponseWrapper::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ServiceResponseWrapper::InternalSwap(ServiceResponseWrapper* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServiceResponseWrapper, _impl_.payload_)
      + sizeof(ServiceResponseWrapper::_impl_.payload_)
      - PROTOBUF_FIELD_OFFSET(ServiceResponseWrapper, _impl_.metadata_)>(
          reinterpret_cast<char*>(&_impl_.metadata_),
          reinterpret_cast<char*>(&other->_impl_.metadata_));
}

::google::protobuf::Metadata ServiceResponseWrapper::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_subscriptions_2eproto_getter, &descriptor_table_subscriptions_2eproto_once,
      file_level_metadata_subscriptions_2eproto[1]);
}
// ===================================================================

class SubscriptionMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<SubscriptionMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SubscriptionMessage, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& subscribed_until(const SubscriptionMessage* msg);
  static void set_has_subscribed_until(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& SubscriptionMessage::_Internal::subscribed_until(const SubscriptionMessage* msg) {
  return *msg->_impl_.subscribed_until_;
}
void SubscriptionMessage::clear_subscribed_until() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.subscribed_until_ != nullptr) _impl_.subscribed_until_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SubscriptionMessage::SubscriptionMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscription_pb.SubscriptionMessage)
}
inline PROTOBUF_NDEBUG_INLINE SubscriptionMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subscription_id_(arena, from.subscription_id_),
        user_id_(arena, from.user_id_) {}

SubscriptionMessage::SubscriptionMessage(
    ::google::protobuf::Arena* arena,
    const SubscriptionMessage& from)
    : ::google::protobuf::Message(arena) {
  SubscriptionMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.subscribed_until_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.subscribed_until_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:subscription_pb.SubscriptionMessage)
}
inline PROTOBUF_NDEBUG_INLINE SubscriptionMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        subscription_id_(arena),
        user_id_(arena) {}

inline void SubscriptionMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subscribed_until_ = {};
}
SubscriptionMessage::~SubscriptionMessage() {
  // @@protoc_insertion_point(destructor:subscription_pb.SubscriptionMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SubscriptionMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.subscription_id_.Destroy();
  _impl_.user_id_.Destroy();
  delete _impl_.subscribed_until_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SubscriptionMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:subscription_pb.SubscriptionMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subscription_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.subscribed_until_ != nullptr);
    _impl_.subscribed_until_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SubscriptionMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 66, 2> SubscriptionMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscriptionMessage, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SubscriptionMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string subscription_id = 1 [json_name = "subscriptionId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscriptionMessage, _impl_.subscription_id_)}},
    // string user_id = 2 [json_name = "userId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscriptionMessage, _impl_.user_id_)}},
    // .google.protobuf.Timestamp subscribed_until = 3 [json_name = "subscribedUntil"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SubscriptionMessage, _impl_.subscribed_until_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string subscription_id = 1 [json_name = "subscriptionId"];
    {PROTOBUF_FIELD_OFFSET(SubscriptionMessage, _impl_.subscription_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_id = 2 [json_name = "userId"];
    {PROTOBUF_FIELD_OFFSET(SubscriptionMessage, _impl_.user_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp subscribed_until = 3 [json_name = "subscribedUntil"];
    {PROTOBUF_FIELD_OFFSET(SubscriptionMessage, _impl_.subscribed_until_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\43\17\7\0\0\0\0\0"
    "subscription_pb.SubscriptionMessage"
    "subscription_id"
    "user_id"
  }},
};

::uint8_t* SubscriptionMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscription_pb.SubscriptionMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string subscription_id = 1 [json_name = "subscriptionId"];
  if (!this->_internal_subscription_id().empty()) {
    const std::string& _s = this->_internal_subscription_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "subscription_pb.SubscriptionMessage.subscription_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    const std::string& _s = this->_internal_user_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "subscription_pb.SubscriptionMessage.user_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp subscribed_until = 3 [json_name = "subscribedUntil"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::subscribed_until(this),
        _Internal::subscribed_until(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscription_pb.SubscriptionMessage)
  return target;
}

::size_t SubscriptionMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscription_pb.SubscriptionMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subscription_id = 1 [json_name = "subscriptionId"];
  if (!this->_internal_subscription_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_subscription_id());
  }

  // string user_id = 2 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_id());
  }

  // .google.protobuf.Timestamp subscribed_until = 3 [json_name = "subscribedUntil"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.subscribed_until_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SubscriptionMessage::_class_data_ = {
    SubscriptionMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SubscriptionMessage::GetClassData() const {
  return &_class_data_;
}

void SubscriptionMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SubscriptionMessage*>(&to_msg);
  auto& from = static_cast<const SubscriptionMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:subscription_pb.SubscriptionMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_subscription_id().empty()) {
    _this->_internal_set_subscription_id(from._internal_subscription_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_subscribed_until()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_subscribed_until());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscriptionMessage::CopyFrom(const SubscriptionMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscription_pb.SubscriptionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SubscriptionMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SubscriptionMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SubscriptionMessage::InternalSwap(SubscriptionMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscription_id_, &other->_impl_.subscription_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  swap(_impl_.subscribed_until_, other->_impl_.subscribed_until_);
}

::google::protobuf::Metadata SubscriptionMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_subscriptions_2eproto_getter, &descriptor_table_subscriptions_2eproto_once,
      file_level_metadata_subscriptions_2eproto[2]);
}
// ===================================================================

class CreateSubscriptionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateSubscriptionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CreateSubscriptionRequest, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& subscribed_until(const CreateSubscriptionRequest* msg);
  static void set_has_subscribed_until(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& CreateSubscriptionRequest::_Internal::subscribed_until(const CreateSubscriptionRequest* msg) {
  return *msg->_impl_.subscribed_until_;
}
void CreateSubscriptionRequest::clear_subscribed_until() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.subscribed_until_ != nullptr) _impl_.subscribed_until_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CreateSubscriptionRequest::CreateSubscriptionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscription_pb.CreateSubscriptionRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateSubscriptionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        user_id_(arena, from.user_id_) {}

CreateSubscriptionRequest::CreateSubscriptionRequest(
    ::google::protobuf::Arena* arena,
    const CreateSubscriptionRequest& from)
    : ::google::protobuf::Message(arena) {
  CreateSubscriptionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.subscribed_until_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.subscribed_until_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:subscription_pb.CreateSubscriptionRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateSubscriptionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        user_id_(arena) {}

inline void CreateSubscriptionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subscribed_until_ = {};
}
CreateSubscriptionRequest::~CreateSubscriptionRequest() {
  // @@protoc_insertion_point(destructor:subscription_pb.CreateSubscriptionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateSubscriptionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.user_id_.Destroy();
  delete _impl_.subscribed_until_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CreateSubscriptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscription_pb.CreateSubscriptionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.subscribed_until_ != nullptr);
    _impl_.subscribed_until_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateSubscriptionRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 57, 2> CreateSubscriptionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateSubscriptionRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateSubscriptionRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp subscribed_until = 2 [json_name = "subscribedUntil"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CreateSubscriptionRequest, _impl_.subscribed_until_)}},
    // string user_id = 1 [json_name = "userId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CreateSubscriptionRequest, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1 [json_name = "userId"];
    {PROTOBUF_FIELD_OFFSET(CreateSubscriptionRequest, _impl_.user_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp subscribed_until = 2 [json_name = "subscribedUntil"];
    {PROTOBUF_FIELD_OFFSET(CreateSubscriptionRequest, _impl_.subscribed_until_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\51\7\0\0\0\0\0\0"
    "subscription_pb.CreateSubscriptionRequest"
    "user_id"
  }},
};

::uint8_t* CreateSubscriptionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscription_pb.CreateSubscriptionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    const std::string& _s = this->_internal_user_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "subscription_pb.CreateSubscriptionRequest.user_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp subscribed_until = 2 [json_name = "subscribedUntil"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::subscribed_until(this),
        _Internal::subscribed_until(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscription_pb.CreateSubscriptionRequest)
  return target;
}

::size_t CreateSubscriptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscription_pb.CreateSubscriptionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_id());
  }

  // .google.protobuf.Timestamp subscribed_until = 2 [json_name = "subscribedUntil"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.subscribed_until_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CreateSubscriptionRequest::_class_data_ = {
    CreateSubscriptionRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CreateSubscriptionRequest::GetClassData() const {
  return &_class_data_;
}

void CreateSubscriptionRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CreateSubscriptionRequest*>(&to_msg);
  auto& from = static_cast<const CreateSubscriptionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:subscription_pb.CreateSubscriptionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_subscribed_until()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_subscribed_until());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSubscriptionRequest::CopyFrom(const CreateSubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscription_pb.CreateSubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateSubscriptionRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CreateSubscriptionRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CreateSubscriptionRequest::InternalSwap(CreateSubscriptionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  swap(_impl_.subscribed_until_, other->_impl_.subscribed_until_);
}

::google::protobuf::Metadata CreateSubscriptionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_subscriptions_2eproto_getter, &descriptor_table_subscriptions_2eproto_once,
      file_level_metadata_subscriptions_2eproto[3]);
}
// ===================================================================

class GetSubscriptionRequest::_Internal {
 public:
};

GetSubscriptionRequest::GetSubscriptionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscription_pb.GetSubscriptionRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetSubscriptionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : user_id_(arena, from.user_id_),
        _cached_size_{0} {}

GetSubscriptionRequest::GetSubscriptionRequest(
    ::google::protobuf::Arena* arena,
    const GetSubscriptionRequest& from)
    : ::google::protobuf::Message(arena) {
  GetSubscriptionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:subscription_pb.GetSubscriptionRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetSubscriptionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        _cached_size_{0} {}

inline void GetSubscriptionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetSubscriptionRequest::~GetSubscriptionRequest() {
  // @@protoc_insertion_point(destructor:subscription_pb.GetSubscriptionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetSubscriptionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.user_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetSubscriptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscription_pb.GetSubscriptionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetSubscriptionRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 54, 2> GetSubscriptionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetSubscriptionRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string user_id = 1 [json_name = "userId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetSubscriptionRequest, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1 [json_name = "userId"];
    {PROTOBUF_FIELD_OFFSET(GetSubscriptionRequest, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\7\0\0\0\0\0\0"
    "subscription_pb.GetSubscriptionRequest"
    "user_id"
  }},
};

::uint8_t* GetSubscriptionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscription_pb.GetSubscriptionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    const std::string& _s = this->_internal_user_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "subscription_pb.GetSubscriptionRequest.user_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscription_pb.GetSubscriptionRequest)
  return target;
}

::size_t GetSubscriptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscription_pb.GetSubscriptionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetSubscriptionRequest::_class_data_ = {
    GetSubscriptionRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetSubscriptionRequest::GetClassData() const {
  return &_class_data_;
}

void GetSubscriptionRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetSubscriptionRequest*>(&to_msg);
  auto& from = static_cast<const GetSubscriptionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:subscription_pb.GetSubscriptionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSubscriptionRequest::CopyFrom(const GetSubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscription_pb.GetSubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetSubscriptionRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetSubscriptionRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetSubscriptionRequest::InternalSwap(GetSubscriptionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
}

::google::protobuf::Metadata GetSubscriptionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_subscriptions_2eproto_getter, &descriptor_table_subscriptions_2eproto_once,
      file_level_metadata_subscriptions_2eproto[4]);
}
// ===================================================================

class DeleteSubscriptionRequest::_Internal {
 public:
};

DeleteSubscriptionRequest::DeleteSubscriptionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscription_pb.DeleteSubscriptionRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteSubscriptionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : user_id_(arena, from.user_id_),
        _cached_size_{0} {}

DeleteSubscriptionRequest::DeleteSubscriptionRequest(
    ::google::protobuf::Arena* arena,
    const DeleteSubscriptionRequest& from)
    : ::google::protobuf::Message(arena) {
  DeleteSubscriptionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:subscription_pb.DeleteSubscriptionRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteSubscriptionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        _cached_size_{0} {}

inline void DeleteSubscriptionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteSubscriptionRequest::~DeleteSubscriptionRequest() {
  // @@protoc_insertion_point(destructor:subscription_pb.DeleteSubscriptionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeleteSubscriptionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.user_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeleteSubscriptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscription_pb.DeleteSubscriptionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeleteSubscriptionRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 57, 2> DeleteSubscriptionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeleteSubscriptionRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string user_id = 1 [json_name = "userId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteSubscriptionRequest, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1 [json_name = "userId"];
    {PROTOBUF_FIELD_OFFSET(DeleteSubscriptionRequest, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\7\0\0\0\0\0\0"
    "subscription_pb.DeleteSubscriptionRequest"
    "user_id"
  }},
};

::uint8_t* DeleteSubscriptionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscription_pb.DeleteSubscriptionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    const std::string& _s = this->_internal_user_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "subscription_pb.DeleteSubscriptionRequest.user_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscription_pb.DeleteSubscriptionRequest)
  return target;
}

::size_t DeleteSubscriptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscription_pb.DeleteSubscriptionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1 [json_name = "userId"];
  if (!this->_internal_user_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeleteSubscriptionRequest::_class_data_ = {
    DeleteSubscriptionRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeleteSubscriptionRequest::GetClassData() const {
  return &_class_data_;
}

void DeleteSubscriptionRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeleteSubscriptionRequest*>(&to_msg);
  auto& from = static_cast<const DeleteSubscriptionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:subscription_pb.DeleteSubscriptionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSubscriptionRequest::CopyFrom(const DeleteSubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscription_pb.DeleteSubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeleteSubscriptionRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeleteSubscriptionRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeleteSubscriptionRequest::InternalSwap(DeleteSubscriptionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
}

::google::protobuf::Metadata DeleteSubscriptionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_subscriptions_2eproto_getter, &descriptor_table_subscriptions_2eproto_once,
      file_level_metadata_subscriptions_2eproto[5]);
}
// ===================================================================

class HealthCheckRequest::_Internal {
 public:
};

HealthCheckRequest::HealthCheckRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:subscription_pb.HealthCheckRequest)
}
HealthCheckRequest::HealthCheckRequest(
    ::google::protobuf::Arena* arena,
    const HealthCheckRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  HealthCheckRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:subscription_pb.HealthCheckRequest)
}









::google::protobuf::Metadata HealthCheckRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_subscriptions_2eproto_getter, &descriptor_table_subscriptions_2eproto_once,
      file_level_metadata_subscriptions_2eproto[6]);
}
// ===================================================================

class HealthCheckResponse::_Internal {
 public:
};

HealthCheckResponse::HealthCheckResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:subscription_pb.HealthCheckResponse)
}
inline PROTOBUF_NDEBUG_INLINE HealthCheckResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : status_(arena, from.status_),
        _cached_size_{0} {}

HealthCheckResponse::HealthCheckResponse(
    ::google::protobuf::Arena* arena,
    const HealthCheckResponse& from)
    : ::google::protobuf::Message(arena) {
  HealthCheckResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:subscription_pb.HealthCheckResponse)
}
inline PROTOBUF_NDEBUG_INLINE HealthCheckResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : status_(arena),
        _cached_size_{0} {}

inline void HealthCheckResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HealthCheckResponse::~HealthCheckResponse() {
  // @@protoc_insertion_point(destructor:subscription_pb.HealthCheckResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HealthCheckResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.status_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void HealthCheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscription_pb.HealthCheckResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HealthCheckResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 50, 2> HealthCheckResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HealthCheckResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string status = 1 [json_name = "status"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HealthCheckResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string status = 1 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(HealthCheckResponse, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\6\0\0\0\0\0\0"
    "subscription_pb.HealthCheckResponse"
    "status"
  }},
};

::uint8_t* HealthCheckResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:subscription_pb.HealthCheckResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    const std::string& _s = this->_internal_status();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "subscription_pb.HealthCheckResponse.status");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subscription_pb.HealthCheckResponse)
  return target;
}

::size_t HealthCheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscription_pb.HealthCheckResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1 [json_name = "status"];
  if (!this->_internal_status().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData HealthCheckResponse::_class_data_ = {
    HealthCheckResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* HealthCheckResponse::GetClassData() const {
  return &_class_data_;
}

void HealthCheckResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<HealthCheckResponse*>(&to_msg);
  auto& from = static_cast<const HealthCheckResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:subscription_pb.HealthCheckResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HealthCheckResponse::CopyFrom(const HealthCheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscription_pb.HealthCheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HealthCheckResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* HealthCheckResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void HealthCheckResponse::InternalSwap(HealthCheckResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
}

::google::protobuf::Metadata HealthCheckResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_subscriptions_2eproto_getter, &descriptor_table_subscriptions_2eproto_once,
      file_level_metadata_subscriptions_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace subscription_pb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: contents/contents.proto

package contents

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContentType int32

const (
	ContentType_FLASHCARD ContentType = 0
	ContentType_MCQ       ContentType = 1
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0: "FLASHCARD",
		1: "MCQ",
	}
	ContentType_value = map[string]int32{
		"FLASHCARD": 0,
		"MCQ":       1,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_contents_contents_proto_enumTypes[0].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_contents_contents_proto_enumTypes[0]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{0}
}

type Flashcard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NoteId   string `protobuf:"bytes,2,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	Question string `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	Answer   string `protobuf:"bytes,4,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *Flashcard) Reset() {
	*x = Flashcard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flashcard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flashcard) ProtoMessage() {}

func (x *Flashcard) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flashcard.ProtoReflect.Descriptor instead.
func (*Flashcard) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{0}
}

func (x *Flashcard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Flashcard) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

func (x *Flashcard) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *Flashcard) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type MultipleChoiceQuestionOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Option    string `protobuf:"bytes,1,opt,name=option,proto3" json:"option,omitempty"`
	IsCorrect bool   `protobuf:"varint,2,opt,name=is_correct,json=isCorrect,proto3" json:"is_correct,omitempty"`
}

func (x *MultipleChoiceQuestionOption) Reset() {
	*x = MultipleChoiceQuestionOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleChoiceQuestionOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleChoiceQuestionOption) ProtoMessage() {}

func (x *MultipleChoiceQuestionOption) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleChoiceQuestionOption.ProtoReflect.Descriptor instead.
func (*MultipleChoiceQuestionOption) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{1}
}

func (x *MultipleChoiceQuestionOption) GetOption() string {
	if x != nil {
		return x.Option
	}
	return ""
}

func (x *MultipleChoiceQuestionOption) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

type MultipleChoiceQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NoteId          string                          `protobuf:"bytes,2,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	Question        string                          `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	Options         []*MultipleChoiceQuestionOption `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	MultipleAnswers bool                            `protobuf:"varint,5,opt,name=multiple_answers,json=multipleAnswers,proto3" json:"multiple_answers,omitempty"`
}

func (x *MultipleChoiceQuestion) Reset() {
	*x = MultipleChoiceQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleChoiceQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleChoiceQuestion) ProtoMessage() {}

func (x *MultipleChoiceQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleChoiceQuestion.ProtoReflect.Descriptor instead.
func (*MultipleChoiceQuestion) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{2}
}

func (x *MultipleChoiceQuestion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MultipleChoiceQuestion) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

func (x *MultipleChoiceQuestion) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *MultipleChoiceQuestion) GetOptions() []*MultipleChoiceQuestionOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *MultipleChoiceQuestion) GetMultipleAnswers() bool {
	if x != nil {
		return x.MultipleAnswers
	}
	return false
}

type ResponseMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ResponseMetadata) Reset() {
	*x = ResponseMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMetadata) ProtoMessage() {}

func (x *ResponseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMetadata.ProtoReflect.Descriptor instead.
func (*ResponseMetadata) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseMetadata) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ResponseMetadata) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type CreateTemporaryFlashcardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteId   string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	Question string `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Answer   string `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *CreateTemporaryFlashcardRequest) Reset() {
	*x = CreateTemporaryFlashcardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemporaryFlashcardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemporaryFlashcardRequest) ProtoMessage() {}

func (x *CreateTemporaryFlashcardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemporaryFlashcardRequest.ProtoReflect.Descriptor instead.
func (*CreateTemporaryFlashcardRequest) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTemporaryFlashcardRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

func (x *CreateTemporaryFlashcardRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *CreateTemporaryFlashcardRequest) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type CreateTemporaryFlashcardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata  *ResponseMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Flashcard *Flashcard        `protobuf:"bytes,2,opt,name=flashcard,proto3" json:"flashcard,omitempty"`
}

func (x *CreateTemporaryFlashcardResponse) Reset() {
	*x = CreateTemporaryFlashcardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemporaryFlashcardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemporaryFlashcardResponse) ProtoMessage() {}

func (x *CreateTemporaryFlashcardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemporaryFlashcardResponse.ProtoReflect.Descriptor instead.
func (*CreateTemporaryFlashcardResponse) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{5}
}

func (x *CreateTemporaryFlashcardResponse) GetMetadata() *ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateTemporaryFlashcardResponse) GetFlashcard() *Flashcard {
	if x != nil {
		return x.Flashcard
	}
	return nil
}

type CreateTemporaryMultipleChoiceQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteId   string                          `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	Question string                          `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Options  []*MultipleChoiceQuestionOption `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *CreateTemporaryMultipleChoiceQuestionRequest) Reset() {
	*x = CreateTemporaryMultipleChoiceQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemporaryMultipleChoiceQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemporaryMultipleChoiceQuestionRequest) ProtoMessage() {}

func (x *CreateTemporaryMultipleChoiceQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemporaryMultipleChoiceQuestionRequest.ProtoReflect.Descriptor instead.
func (*CreateTemporaryMultipleChoiceQuestionRequest) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTemporaryMultipleChoiceQuestionRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

func (x *CreateTemporaryMultipleChoiceQuestionRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *CreateTemporaryMultipleChoiceQuestionRequest) GetOptions() []*MultipleChoiceQuestionOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type CreateTemporaryMultipleChoiceQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Mcq      *MultipleChoiceQuestion `protobuf:"bytes,2,opt,name=mcq,proto3" json:"mcq,omitempty"`
}

func (x *CreateTemporaryMultipleChoiceQuestionResponse) Reset() {
	*x = CreateTemporaryMultipleChoiceQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTemporaryMultipleChoiceQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemporaryMultipleChoiceQuestionResponse) ProtoMessage() {}

func (x *CreateTemporaryMultipleChoiceQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemporaryMultipleChoiceQuestionResponse.ProtoReflect.Descriptor instead.
func (*CreateTemporaryMultipleChoiceQuestionResponse) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{7}
}

func (x *CreateTemporaryMultipleChoiceQuestionResponse) GetMetadata() *ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateTemporaryMultipleChoiceQuestionResponse) GetMcq() *MultipleChoiceQuestion {
	if x != nil {
		return x.Mcq
	}
	return nil
}

type UpdateTemporaryFlashcardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NoteId   string  `protobuf:"bytes,2,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	Question *string `protobuf:"bytes,3,opt,name=question,proto3,oneof" json:"question,omitempty"`
	Answer   *string `protobuf:"bytes,4,opt,name=answer,proto3,oneof" json:"answer,omitempty"`
}

func (x *UpdateTemporaryFlashcardRequest) Reset() {
	*x = UpdateTemporaryFlashcardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemporaryFlashcardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemporaryFlashcardRequest) ProtoMessage() {}

func (x *UpdateTemporaryFlashcardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemporaryFlashcardRequest.ProtoReflect.Descriptor instead.
func (*UpdateTemporaryFlashcardRequest) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTemporaryFlashcardRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTemporaryFlashcardRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

func (x *UpdateTemporaryFlashcardRequest) GetQuestion() string {
	if x != nil && x.Question != nil {
		return *x.Question
	}
	return ""
}

func (x *UpdateTemporaryFlashcardRequest) GetAnswer() string {
	if x != nil && x.Answer != nil {
		return *x.Answer
	}
	return ""
}

type UpdateTemporaryFlashcardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata  *ResponseMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Flashcard *Flashcard        `protobuf:"bytes,2,opt,name=flashcard,proto3" json:"flashcard,omitempty"`
}

func (x *UpdateTemporaryFlashcardResponse) Reset() {
	*x = UpdateTemporaryFlashcardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemporaryFlashcardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemporaryFlashcardResponse) ProtoMessage() {}

func (x *UpdateTemporaryFlashcardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemporaryFlashcardResponse.ProtoReflect.Descriptor instead.
func (*UpdateTemporaryFlashcardResponse) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTemporaryFlashcardResponse) GetMetadata() *ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateTemporaryFlashcardResponse) GetFlashcard() *Flashcard {
	if x != nil {
		return x.Flashcard
	}
	return nil
}

type UpdateTemporaryMultipleChoiceQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NoteId   string                          `protobuf:"bytes,2,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	Question *string                         `protobuf:"bytes,3,opt,name=question,proto3,oneof" json:"question,omitempty"`
	Options  []*MultipleChoiceQuestionOption `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *UpdateTemporaryMultipleChoiceQuestionRequest) Reset() {
	*x = UpdateTemporaryMultipleChoiceQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemporaryMultipleChoiceQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemporaryMultipleChoiceQuestionRequest) ProtoMessage() {}

func (x *UpdateTemporaryMultipleChoiceQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemporaryMultipleChoiceQuestionRequest.ProtoReflect.Descriptor instead.
func (*UpdateTemporaryMultipleChoiceQuestionRequest) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTemporaryMultipleChoiceQuestionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTemporaryMultipleChoiceQuestionRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

func (x *UpdateTemporaryMultipleChoiceQuestionRequest) GetQuestion() string {
	if x != nil && x.Question != nil {
		return *x.Question
	}
	return ""
}

func (x *UpdateTemporaryMultipleChoiceQuestionRequest) GetOptions() []*MultipleChoiceQuestionOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type UpdateTemporaryMultipleChoiceQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Mcq      *MultipleChoiceQuestion `protobuf:"bytes,2,opt,name=mcq,proto3" json:"mcq,omitempty"`
}

func (x *UpdateTemporaryMultipleChoiceQuestionResponse) Reset() {
	*x = UpdateTemporaryMultipleChoiceQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTemporaryMultipleChoiceQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemporaryMultipleChoiceQuestionResponse) ProtoMessage() {}

func (x *UpdateTemporaryMultipleChoiceQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemporaryMultipleChoiceQuestionResponse.ProtoReflect.Descriptor instead.
func (*UpdateTemporaryMultipleChoiceQuestionResponse) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTemporaryMultipleChoiceQuestionResponse) GetMetadata() *ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateTemporaryMultipleChoiceQuestionResponse) GetMcq() *MultipleChoiceQuestion {
	if x != nil {
		return x.Mcq
	}
	return nil
}

type DeleteTemporaryFlashcardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NoteId string `protobuf:"bytes,2,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
}

func (x *DeleteTemporaryFlashcardRequest) Reset() {
	*x = DeleteTemporaryFlashcardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemporaryFlashcardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemporaryFlashcardRequest) ProtoMessage() {}

func (x *DeleteTemporaryFlashcardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemporaryFlashcardRequest.ProtoReflect.Descriptor instead.
func (*DeleteTemporaryFlashcardRequest) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteTemporaryFlashcardRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteTemporaryFlashcardRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

type DeleteTemporaryFlashcardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata  *ResponseMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Flashcard *Flashcard        `protobuf:"bytes,2,opt,name=flashcard,proto3" json:"flashcard,omitempty"`
}

func (x *DeleteTemporaryFlashcardResponse) Reset() {
	*x = DeleteTemporaryFlashcardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemporaryFlashcardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemporaryFlashcardResponse) ProtoMessage() {}

func (x *DeleteTemporaryFlashcardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemporaryFlashcardResponse.ProtoReflect.Descriptor instead.
func (*DeleteTemporaryFlashcardResponse) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteTemporaryFlashcardResponse) GetMetadata() *ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DeleteTemporaryFlashcardResponse) GetFlashcard() *Flashcard {
	if x != nil {
		return x.Flashcard
	}
	return nil
}

type DeleteTemporaryMultipleChoiceQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NoteId string `protobuf:"bytes,2,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
}

func (x *DeleteTemporaryMultipleChoiceQuestionRequest) Reset() {
	*x = DeleteTemporaryMultipleChoiceQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemporaryMultipleChoiceQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemporaryMultipleChoiceQuestionRequest) ProtoMessage() {}

func (x *DeleteTemporaryMultipleChoiceQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemporaryMultipleChoiceQuestionRequest.ProtoReflect.Descriptor instead.
func (*DeleteTemporaryMultipleChoiceQuestionRequest) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteTemporaryMultipleChoiceQuestionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteTemporaryMultipleChoiceQuestionRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

type DeleteTemporaryMultipleChoiceQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ResponseMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Mcq      *MultipleChoiceQuestion `protobuf:"bytes,2,opt,name=mcq,proto3" json:"mcq,omitempty"`
}

func (x *DeleteTemporaryMultipleChoiceQuestionResponse) Reset() {
	*x = DeleteTemporaryMultipleChoiceQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTemporaryMultipleChoiceQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemporaryMultipleChoiceQuestionResponse) ProtoMessage() {}

func (x *DeleteTemporaryMultipleChoiceQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemporaryMultipleChoiceQuestionResponse.ProtoReflect.Descriptor instead.
func (*DeleteTemporaryMultipleChoiceQuestionResponse) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteTemporaryMultipleChoiceQuestionResponse) GetMetadata() *ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DeleteTemporaryMultipleChoiceQuestionResponse) GetMcq() *MultipleChoiceQuestion {
	if x != nil {
		return x.Mcq
	}
	return nil
}

type GetAllTemporaryContentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteId string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
}

func (x *GetAllTemporaryContentsRequest) Reset() {
	*x = GetAllTemporaryContentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTemporaryContentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTemporaryContentsRequest) ProtoMessage() {}

func (x *GetAllTemporaryContentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTemporaryContentsRequest.ProtoReflect.Descriptor instead.
func (*GetAllTemporaryContentsRequest) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{16}
}

func (x *GetAllTemporaryContentsRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

type GetAllTemporaryContentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata   *ResponseMetadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Flashcards []*Flashcard              `protobuf:"bytes,2,rep,name=flashcards,proto3" json:"flashcards,omitempty"`
	Mcqs       []*MultipleChoiceQuestion `protobuf:"bytes,3,rep,name=mcqs,proto3" json:"mcqs,omitempty"`
}

func (x *GetAllTemporaryContentsResponse) Reset() {
	*x = GetAllTemporaryContentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTemporaryContentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTemporaryContentsResponse) ProtoMessage() {}

func (x *GetAllTemporaryContentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTemporaryContentsResponse.ProtoReflect.Descriptor instead.
func (*GetAllTemporaryContentsResponse) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{17}
}

func (x *GetAllTemporaryContentsResponse) GetMetadata() *ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetAllTemporaryContentsResponse) GetFlashcards() []*Flashcard {
	if x != nil {
		return x.Flashcards
	}
	return nil
}

func (x *GetAllTemporaryContentsResponse) GetMcqs() []*MultipleChoiceQuestion {
	if x != nil {
		return x.Mcqs
	}
	return nil
}

type CommitTemporaryContentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteId string `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
}

func (x *CommitTemporaryContentsRequest) Reset() {
	*x = CommitTemporaryContentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitTemporaryContentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTemporaryContentsRequest) ProtoMessage() {}

func (x *CommitTemporaryContentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTemporaryContentsRequest.ProtoReflect.Descriptor instead.
func (*CommitTemporaryContentsRequest) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{18}
}

func (x *CommitTemporaryContentsRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

type CommitTemporaryContentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata   *ResponseMetadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Flashcards []*Flashcard              `protobuf:"bytes,2,rep,name=flashcards,proto3" json:"flashcards,omitempty"`
	Mcqs       []*MultipleChoiceQuestion `protobuf:"bytes,3,rep,name=mcqs,proto3" json:"mcqs,omitempty"`
}

func (x *CommitTemporaryContentsResponse) Reset() {
	*x = CommitTemporaryContentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitTemporaryContentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitTemporaryContentsResponse) ProtoMessage() {}

func (x *CommitTemporaryContentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitTemporaryContentsResponse.ProtoReflect.Descriptor instead.
func (*CommitTemporaryContentsResponse) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{19}
}

func (x *CommitTemporaryContentsResponse) GetMetadata() *ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CommitTemporaryContentsResponse) GetFlashcards() []*Flashcard {
	if x != nil {
		return x.Flashcards
	}
	return nil
}

func (x *CommitTemporaryContentsResponse) GetMcqs() []*MultipleChoiceQuestion {
	if x != nil {
		return x.Mcqs
	}
	return nil
}

type GetSavedContentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteId      string        `protobuf:"bytes,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	ContentType []ContentType `protobuf:"varint,2,rep,packed,name=content_type,json=contentType,proto3,enum=content_pb.ContentType" json:"content_type,omitempty"`
}

func (x *GetSavedContentsRequest) Reset() {
	*x = GetSavedContentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSavedContentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSavedContentsRequest) ProtoMessage() {}

func (x *GetSavedContentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSavedContentsRequest.ProtoReflect.Descriptor instead.
func (*GetSavedContentsRequest) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{20}
}

func (x *GetSavedContentsRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

func (x *GetSavedContentsRequest) GetContentType() []ContentType {
	if x != nil {
		return x.ContentType
	}
	return nil
}

type GetSavedContentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata   *ResponseMetadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Flashcards []*Flashcard              `protobuf:"bytes,2,rep,name=flashcards,proto3" json:"flashcards,omitempty"`
	Mcqs       []*MultipleChoiceQuestion `protobuf:"bytes,3,rep,name=mcqs,proto3" json:"mcqs,omitempty"`
}

func (x *GetSavedContentsResponse) Reset() {
	*x = GetSavedContentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_contents_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSavedContentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSavedContentsResponse) ProtoMessage() {}

func (x *GetSavedContentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_contents_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSavedContentsResponse.ProtoReflect.Descriptor instead.
func (*GetSavedContentsResponse) Descriptor() ([]byte, []int) {
	return file_contents_contents_proto_rawDescGZIP(), []int{21}
}

func (x *GetSavedContentsResponse) GetMetadata() *ResponseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetSavedContentsResponse) GetFlashcards() []*Flashcard {
	if x != nil {
		return x.Flashcards
	}
	return nil
}

func (x *GetSavedContentsResponse) GetMcqs() []*MultipleChoiceQuestion {
	if x != nil {
		return x.Mcqs
	}
	return nil
}

var File_contents_contents_proto protoreflect.FileDescriptor

var file_contents_contents_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68, 0x0a, 0x09, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63,
	0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x22, 0x55, 0x0a, 0x1c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x16, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x6b, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x6e, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x33, 0x0a, 0x09, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x62, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x09, 0x66, 0x6c,
	0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x2c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x9f, 0x01, 0x0a, 0x2d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a,
	0x03, 0x6d, 0x63, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x6d, 0x63, 0x71, 0x22, 0xa0, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x09, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52,
	0x09, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x22, 0xc9, 0x01, 0x0a, 0x2c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x2d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x34, 0x0a, 0x03, 0x6d, 0x63, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x03, 0x6d, 0x63, 0x71, 0x22, 0x4a, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x74, 0x65, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x09, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x09, 0x66,
	0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x22, 0x57, 0x0a, 0x2c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49,
	0x64, 0x22, 0x9f, 0x01, 0x0a, 0x2d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a,
	0x03, 0x6d, 0x63, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03,
	0x6d, 0x63, 0x71, 0x22, 0x39, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x22, 0xca,
	0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0a,
	0x66, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x6d, 0x63, 0x71, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6d, 0x63, 0x71, 0x73, 0x22, 0x39, 0x0a, 0x1e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x1f, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0a, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52,
	0x0a, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x6d,
	0x63, 0x71, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6d,
	0x63, 0x71, 0x73, 0x22, 0x6e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0a, 0x66, 0x6c,
	0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x36, 0x0a, 0x04, 0x6d, 0x63, 0x71, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6d, 0x63, 0x71, 0x73, 0x2a, 0x25, 0x0a, 0x0b, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x4c, 0x41, 0x53,
	0x48, 0x43, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x43, 0x51, 0x10, 0x01,
	0x32, 0x92, 0x09, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x75, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61,
	0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x75, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x12, 0x2b,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x25, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x63, 0x61, 0x72, 0x64, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72,
	0x79, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x46, 0x6c,
	0x61, 0x73, 0x68, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x9c, 0x01, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72,
	0x61, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x72, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x55, 0x5a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x45, 0x63, 0x68, 0x6f, 0x53, 0x6b, 0x6f, 0x72, 0x4a, 0x6a, 0x6a, 0x2f,
	0x49, 0x53, 0x32, 0x31, 0x33, 0x2d, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x2d, 0x74, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contents_contents_proto_rawDescOnce sync.Once
	file_contents_contents_proto_rawDescData = file_contents_contents_proto_rawDesc
)

func file_contents_contents_proto_rawDescGZIP() []byte {
	file_contents_contents_proto_rawDescOnce.Do(func() {
		file_contents_contents_proto_rawDescData = protoimpl.X.CompressGZIP(file_contents_contents_proto_rawDescData)
	})
	return file_contents_contents_proto_rawDescData
}

var file_contents_contents_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_contents_contents_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_contents_contents_proto_goTypes = []interface{}{
	(ContentType)(0),                                      // 0: content_pb.ContentType
	(*Flashcard)(nil),                                     // 1: content_pb.Flashcard
	(*MultipleChoiceQuestionOption)(nil),                  // 2: content_pb.MultipleChoiceQuestionOption
	(*MultipleChoiceQuestion)(nil),                        // 3: content_pb.MultipleChoiceQuestion
	(*ResponseMetadata)(nil),                              // 4: content_pb.ResponseMetadata
	(*CreateTemporaryFlashcardRequest)(nil),               // 5: content_pb.CreateTemporaryFlashcardRequest
	(*CreateTemporaryFlashcardResponse)(nil),              // 6: content_pb.CreateTemporaryFlashcardResponse
	(*CreateTemporaryMultipleChoiceQuestionRequest)(nil),  // 7: content_pb.CreateTemporaryMultipleChoiceQuestionRequest
	(*CreateTemporaryMultipleChoiceQuestionResponse)(nil), // 8: content_pb.CreateTemporaryMultipleChoiceQuestionResponse
	(*UpdateTemporaryFlashcardRequest)(nil),               // 9: content_pb.UpdateTemporaryFlashcardRequest
	(*UpdateTemporaryFlashcardResponse)(nil),              // 10: content_pb.UpdateTemporaryFlashcardResponse
	(*UpdateTemporaryMultipleChoiceQuestionRequest)(nil),  // 11: content_pb.UpdateTemporaryMultipleChoiceQuestionRequest
	(*UpdateTemporaryMultipleChoiceQuestionResponse)(nil), // 12: content_pb.UpdateTemporaryMultipleChoiceQuestionResponse
	(*DeleteTemporaryFlashcardRequest)(nil),               // 13: content_pb.DeleteTemporaryFlashcardRequest
	(*DeleteTemporaryFlashcardResponse)(nil),              // 14: content_pb.DeleteTemporaryFlashcardResponse
	(*DeleteTemporaryMultipleChoiceQuestionRequest)(nil),  // 15: content_pb.DeleteTemporaryMultipleChoiceQuestionRequest
	(*DeleteTemporaryMultipleChoiceQuestionResponse)(nil), // 16: content_pb.DeleteTemporaryMultipleChoiceQuestionResponse
	(*GetAllTemporaryContentsRequest)(nil),                // 17: content_pb.GetAllTemporaryContentsRequest
	(*GetAllTemporaryContentsResponse)(nil),               // 18: content_pb.GetAllTemporaryContentsResponse
	(*CommitTemporaryContentsRequest)(nil),                // 19: content_pb.CommitTemporaryContentsRequest
	(*CommitTemporaryContentsResponse)(nil),               // 20: content_pb.CommitTemporaryContentsResponse
	(*GetSavedContentsRequest)(nil),                       // 21: content_pb.GetSavedContentsRequest
	(*GetSavedContentsResponse)(nil),                      // 22: content_pb.GetSavedContentsResponse
	(*timestamppb.Timestamp)(nil),                         // 23: google.protobuf.Timestamp
}
var file_contents_contents_proto_depIdxs = []int32{
	2,  // 0: content_pb.MultipleChoiceQuestion.options:type_name -> content_pb.MultipleChoiceQuestionOption
	23, // 1: content_pb.ResponseMetadata.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 2: content_pb.CreateTemporaryFlashcardResponse.metadata:type_name -> content_pb.ResponseMetadata
	1,  // 3: content_pb.CreateTemporaryFlashcardResponse.flashcard:type_name -> content_pb.Flashcard
	2,  // 4: content_pb.CreateTemporaryMultipleChoiceQuestionRequest.options:type_name -> content_pb.MultipleChoiceQuestionOption
	4,  // 5: content_pb.CreateTemporaryMultipleChoiceQuestionResponse.metadata:type_name -> content_pb.ResponseMetadata
	3,  // 6: content_pb.CreateTemporaryMultipleChoiceQuestionResponse.mcq:type_name -> content_pb.MultipleChoiceQuestion
	4,  // 7: content_pb.UpdateTemporaryFlashcardResponse.metadata:type_name -> content_pb.ResponseMetadata
	1,  // 8: content_pb.UpdateTemporaryFlashcardResponse.flashcard:type_name -> content_pb.Flashcard
	2,  // 9: content_pb.UpdateTemporaryMultipleChoiceQuestionRequest.options:type_name -> content_pb.MultipleChoiceQuestionOption
	4,  // 10: content_pb.UpdateTemporaryMultipleChoiceQuestionResponse.metadata:type_name -> content_pb.ResponseMetadata
	3,  // 11: content_pb.UpdateTemporaryMultipleChoiceQuestionResponse.mcq:type_name -> content_pb.MultipleChoiceQuestion
	4,  // 12: content_pb.DeleteTemporaryFlashcardResponse.metadata:type_name -> content_pb.ResponseMetadata
	1,  // 13: content_pb.DeleteTemporaryFlashcardResponse.flashcard:type_name -> content_pb.Flashcard
	4,  // 14: content_pb.DeleteTemporaryMultipleChoiceQuestionResponse.metadata:type_name -> content_pb.ResponseMetadata
	3,  // 15: content_pb.DeleteTemporaryMultipleChoiceQuestionResponse.mcq:type_name -> content_pb.MultipleChoiceQuestion
	4,  // 16: content_pb.GetAllTemporaryContentsResponse.metadata:type_name -> content_pb.ResponseMetadata
	1,  // 17: content_pb.GetAllTemporaryContentsResponse.flashcards:type_name -> content_pb.Flashcard
	3,  // 18: content_pb.GetAllTemporaryContentsResponse.mcqs:type_name -> content_pb.MultipleChoiceQuestion
	4,  // 19: content_pb.CommitTemporaryContentsResponse.metadata:type_name -> content_pb.ResponseMetadata
	1,  // 20: content_pb.CommitTemporaryContentsResponse.flashcards:type_name -> content_pb.Flashcard
	3,  // 21: content_pb.CommitTemporaryContentsResponse.mcqs:type_name -> content_pb.MultipleChoiceQuestion
	0,  // 22: content_pb.GetSavedContentsRequest.content_type:type_name -> content_pb.ContentType
	4,  // 23: content_pb.GetSavedContentsResponse.metadata:type_name -> content_pb.ResponseMetadata
	1,  // 24: content_pb.GetSavedContentsResponse.flashcards:type_name -> content_pb.Flashcard
	3,  // 25: content_pb.GetSavedContentsResponse.mcqs:type_name -> content_pb.MultipleChoiceQuestion
	5,  // 26: content_pb.Content.CreateTemporaryFlashcard:input_type -> content_pb.CreateTemporaryFlashcardRequest
	7,  // 27: content_pb.Content.CreateTemporaryMultipleChoiceQuestion:input_type -> content_pb.CreateTemporaryMultipleChoiceQuestionRequest
	9,  // 28: content_pb.Content.UpdateTemporaryFlashcard:input_type -> content_pb.UpdateTemporaryFlashcardRequest
	11, // 29: content_pb.Content.UpdateTemporaryMultipleChoiceQuestion:input_type -> content_pb.UpdateTemporaryMultipleChoiceQuestionRequest
	13, // 30: content_pb.Content.DeleteTemporaryFlashcard:input_type -> content_pb.DeleteTemporaryFlashcardRequest
	15, // 31: content_pb.Content.DeleteTemporaryMultipleChoiceQuestion:input_type -> content_pb.DeleteTemporaryMultipleChoiceQuestionRequest
	17, // 32: content_pb.Content.GetAllTemporaryContents:input_type -> content_pb.GetAllTemporaryContentsRequest
	19, // 33: content_pb.Content.CommitTemporaryContents:input_type -> content_pb.CommitTemporaryContentsRequest
	21, // 34: content_pb.Content.GetSavedContents:input_type -> content_pb.GetSavedContentsRequest
	6,  // 35: content_pb.Content.CreateTemporaryFlashcard:output_type -> content_pb.CreateTemporaryFlashcardResponse
	8,  // 36: content_pb.Content.CreateTemporaryMultipleChoiceQuestion:output_type -> content_pb.CreateTemporaryMultipleChoiceQuestionResponse
	10, // 37: content_pb.Content.UpdateTemporaryFlashcard:output_type -> content_pb.UpdateTemporaryFlashcardResponse
	12, // 38: content_pb.Content.UpdateTemporaryMultipleChoiceQuestion:output_type -> content_pb.UpdateTemporaryMultipleChoiceQuestionResponse
	14, // 39: content_pb.Content.DeleteTemporaryFlashcard:output_type -> content_pb.DeleteTemporaryFlashcardResponse
	16, // 40: content_pb.Content.DeleteTemporaryMultipleChoiceQuestion:output_type -> content_pb.DeleteTemporaryMultipleChoiceQuestionResponse
	18, // 41: content_pb.Content.GetAllTemporaryContents:output_type -> content_pb.GetAllTemporaryContentsResponse
	20, // 42: content_pb.Content.CommitTemporaryContents:output_type -> content_pb.CommitTemporaryContentsResponse
	22, // 43: content_pb.Content.GetSavedContents:output_type -> content_pb.GetSavedContentsResponse
	35, // [35:44] is the sub-list for method output_type
	26, // [26:35] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_contents_contents_proto_init() }
func file_contents_contents_proto_init() {
	if File_contents_contents_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contents_contents_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flashcard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleChoiceQuestionOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleChoiceQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemporaryFlashcardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemporaryFlashcardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemporaryMultipleChoiceQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTemporaryMultipleChoiceQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemporaryFlashcardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemporaryFlashcardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemporaryMultipleChoiceQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTemporaryMultipleChoiceQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemporaryFlashcardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemporaryFlashcardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemporaryMultipleChoiceQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTemporaryMultipleChoiceQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTemporaryContentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTemporaryContentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitTemporaryContentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitTemporaryContentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSavedContentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_contents_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSavedContentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_contents_contents_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_contents_contents_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contents_contents_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contents_contents_proto_goTypes,
		DependencyIndexes: file_contents_contents_proto_depIdxs,
		EnumInfos:         file_contents_contents_proto_enumTypes,
		MessageInfos:      file_contents_contents_proto_msgTypes,
	}.Build()
	File_contents_contents_proto = out.File
	file_contents_contents_proto_rawDesc = nil
	file_contents_contents_proto_goTypes = nil
	file_contents_contents_proto_depIdxs = nil
}
